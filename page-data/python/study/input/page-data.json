{"componentChunkName":"component---src-templates-blog-template-js","path":"/python/study/input/","result":{"data":{"cur":{"id":"f1a40c05-b3be-5c29-9261-8209e2b9165b","html":"<p>print( ) 함수와 반대 기능을 수행한다.@</p>\n<br>\n<h2 id=\"input-함수\" style=\"position:relative;\"><a href=\"#input-%ED%95%A8%EC%88%98\" aria-label=\"input 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>input 함수</h2>\n<p>print( ) 함수와 input( ) 함수를 연속해서 사용함으로써 입력값을 확인할 수 있다.<br>\n입력값의 자료형을 알아볼 땐 <strong>type( )를</strong> 사용한다.<br>\n입력값은 무조건 문자열이고, 숫자를 입력하더라도 문자열로 입력된다.<br>\n즉 input 함수는 <strong>문자열을 반환</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please, input a number:'</span><span class=\"token punctuation\">)</span>\r\na <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You entered:'</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 또는 아래와 같이 input( ) 함수를 사용할 수도 있음</span>\r\n<span class=\"token comment\"># input() 함수에 문자열을 파라미터로 사용하면 메세지 출력 후에 값을 입력받을 수 있음</span>\r\n\r\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please, input a second number:'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You entered:'</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Please<span class=\"token punctuation\">,</span> input a number:\r\nlinux\r\nYou entered: linux\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>>\r\nPlease<span class=\"token punctuation\">,</span> input a second number:123\r\nYou entered: 123</code></pre></div>\n<br>\n<p>input( ) 함수는 문자열을 반환한다.<br>\n따라서 정수를 입력받고 싶으면 int( ) 함수를 이용해서 문자열을 숫자로 변환할 수 있다<br>\n즉, input( ) 함수는 문자열로 입력받기 때문에 <strong>숫자를 입력받으려면 int( ) 함수로 변환해서 사용</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">msg <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter any number and l will add 10 to the number: \"</span><span class=\"token punctuation\">)</span>\r\nno <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You entered\"</span><span class=\"token punctuation\">,</span> no<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'll add\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"to it\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"So, the result is...\"</span><span class=\"token punctuation\">,</span> no <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Enter any number and l will add 10 to the number: 123<span class=\"token punctuation\">.</span>1\r\nYou entered 123\r\nI'll add 10 to it\r\nSo<span class=\"token punctuation\">,</span> the result is<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> 133</code></pre></div>\n<br>\n<p>int( ) 함수를 통해서 파라미터를 int 자료형으로 변경할 수 있다고 했지만 아래 문장은 에러다.<br>\n“1”, “123” 처럼 <strong>숫자로 된 문자열만 변경이 가능</strong>하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">ValueError                                Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>\r\n&lt;ipython-input-11-3688a62e4fa1> in &lt;module><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n      2 <span class=\"token comment\"># 그렇지만 아래 문장은 에러다</span>\r\n      3 <span class=\"token comment\"># \"1\", \"123\" 처럼 숫자로 된 문자열만 변경이 가능하다.</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>> 4 print<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span><span class=\"token string\">\"AA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nValueError: invalid literal <span class=\"token keyword\">for</span> int<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> with base 10: <span class=\"token string\">'AA'</span></code></pre></div>","excerpt":"print( ) 함수와 반대 기능을 수행한다.@ input 함수 print( ) 함수와 input( ) 함수를 연속해서 사용함으로써 입력값을 확인할 수 있다. 입력값의 자료형을 알아볼 땐 type( )를 사용한다. 입력값은 무조건 문자열이고, 숫자를 입력하더라도 문자열로 입력된다. 즉 input 함수는 문자열을 반환한다. input( ) 함수는 문자열을 반환한다. 따라서 정수를 입력받고 싶으면 int( ) 함수를 이용해서 문자열을 숫자로 변환할 수 있다 즉, input( ) 함수는 문자열로 입력받기 때문에 숫자를 입력받으려면 int( ) 함수로 변환해서 사용한다. int( ) 함수를 통해서 파라미터를 int 자료형으로 변경할 수 있다고 했지만 아래 문장은 에러다. “1”, “123” 처럼 숫자로 된 문자열만 변경이 가능하다.","frontmatter":{"date":"February 16, 2024","title":"Python | 3. input 함수","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/input/"}},"next":{"id":"4abc1300-2a3f-5532-b664-955c50da0753","html":"<p>파이썬에는 다양한 종류의 함수가 있다.</p>\n<ul>\n<li>내장 함수</li>\n<li>외장 함수</li>\n<li>사용자 정의 함수@</li>\n</ul>\n<br>\n<h2 id=\"1-파이썬-내장-함수\" style=\"position:relative;\"><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\" aria-label=\"1 파이썬 내장 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파이썬 내장 함수</h2>\n<p>내장 함수란 파이썬 인터프리터가 설치될 때 별도의 작업없이 바로 사용 가능한 함수들이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 간단한 내장 함수들</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 절대값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최대값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최소값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 지수승</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 소수점 아래에 1자리만 남기고 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 소수점 아래에 3자리만 남기고 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\n40\r\n1\r\n1024\r\n2\r\n3\r\n3<span class=\"token punctuation\">.</span>1\r\n3<span class=\"token punctuation\">.</span>142\r\n3<span class=\"token punctuation\">.</span>1415</code></pre></div>\n<p>아래 링크를 접속하면 내장함수 이름들을 볼 수 있다.</p>\n<ul>\n<li>\n<p><a href=\"https://docs.python.org/ko/3/library/functions.html\" target=\"_blank\"> Python library functions </a></p>\n</li>\n<li>\n<p><a href=\"https://wikidocs.net/32\" target=\"_blank\"> 점프 투 파이썬 내장 함수 </a></p>\n</li>\n<li>\n<p>참고</p>\n<ul>\n<li>추상화 : 복잡한 세부사항을 숨기고, 주요 기능에만 집중할 수 있게 해주는 개념 (변수, 함수, 객체)</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-print-함수\" style=\"position:relative;\"><a href=\"#2-print-%ED%95%A8%EC%88%98\" aria-label=\"2 print 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Print 함수</h2>\n<h3 id=\"1-주석\" style=\"position:relative;\"><a href=\"#1-%EC%A3%BC%EC%84%9D\" aria-label=\"1 주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 주석</h3>\n<p>Sharp(샵, <strong>#</strong>) 기호로 시작되는 줄은 주석이다.<br>\n주석은 프로그램의 실행과는 상관없이 코드의 설명 등에 도움되는 정보를 기입하는 문장이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Sharp(샵) 기호로 시작되는 줄은 주석이다.</span>\r\n<span class=\"token comment\"># 즉, 지금 읽고 있는 이 줄들은 모두 주석이다.</span></code></pre></div>\n<h3 id=\"2-print-\" style=\"position:relative;\"><a href=\"#2-print-\" aria-label=\"2 print  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) print( )</h3>\n<p>print( ) 함수는 괄호( ) 안의 <strong>내용물(파라미터)을</strong> 화면에 출력해준다.</p>\n<p>print( ) 함수를 통해 <strong>문자열</strong>도 출력할 수 있다.<br>\nprint( ) 함수의 괄호 내부에 출력할 내용을 적어주면 되기 때문이다.<br>\n” ” 또는 ’ ‘로 묶인 부분을 문자열(string)이라고 한다.<br>\n문자열은 향후에 자세하게 설명한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래는 1이라는 숫자값을 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 아래는 Hellow World!라는 문자열을 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 숫자 1을 출력하고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 문자열 \"1\"을 출력하고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 위의 2개의 출력 결과는 화면 상에서는 동일하다,</span>\r\n<span class=\"token comment\"># 숫자 1과 문자열 \"1\"은 컴퓨터 내부적으로 저장되는 형식이 다를 뿐이다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\nHello World!\r\n1\r\n1\r\n2</code></pre></div>\n<br>\n<p>print( ) 함수의 괄호 내부에 적는 값을 <strong>파라미터</strong>(parameters, 매개 변수)라고 한다.<br>\nprint( ) 함수는 파라미터가 없으면 아무것도 출력되지 않고 줄만 바뀐다.</p>\n<p>print( ) 함수는 출력한 후 자동으로 줄을 바꿔준다.<br>\n만약 줄을 바꾸고 싶다면 문자열 내에 \\n 기호를 붙인다.<br>\n<strong>\\n</strong> : 줄을 바꾸어주는 역할</p>\n<p>만약 줄을 바꾸고 싶지 않다면 <strong>end=\"\"</strong> 를 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래는 1 비어있는 줄 2 를 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 만약 줄을 바꾸고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 문자열 내에 \\n 기호는 줄을 바꾸어주는 역할</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 만약 줄을 바꾸고 싶지 않다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 위의 사항에서 무엇을 알 수있을까?</span>\r\n<span class=\"token comment\"># print() 함수에는 파라미터가 1개 또는 2개(사실은 더 있을 수 있다)가 될 수 있다는 사실</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\n\r\n2\r\nHello\r\nPython\r\nfirstsecond</code></pre></div>\n<br>\n<p>수식 계산은 계산이 완료된 최종 결과가 출력된다.\r\nprint( ) 함수를 실행하기 전에, 파라미터를 먼저 계산하고, 계산된 결과가 print( ) 함수에게 전달된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">38</code></pre></div>\n<br>\n<p>여러 값을 <strong>콤마</strong>(,)로 구분해서 출력할 수 있다.</p>\n<p>문자열은 <strong>큰 따옴표</strong>(” “)와 <strong>작은 따옴표</strong>(’ ’) 모두 사용할 수 있다.</p>\n<p>필요한 경우는 큰 따옴표 내부에 작은 따옴표를, 작은 따옴표 내부에 큰 따옴표를 ‘문자’의 의미로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 여러 값을 콤마(,)로 구분해서 출력</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum is:\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 큰 따옴표와 작은 따옴표 모두 사용</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 큰 따옴표 내부에 작은 따옴표, 작은 따옴표 내부에 큰 따옴표</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is Jung's Book.\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung\"s Book.'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">sum is: 10\r\nHello\r\nHello\r\nThis is Jung's Book<span class=\"token punctuation\">.</span>\r\nThis is Jung\"s Book<span class=\"token punctuation\">.</span></code></pre></div>\n<br>\n<p>하지만 <strong>에러가 나는 경우</strong>도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 어디가 문자열의 끝인지 불 명확하기 때문</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung'</span>s Book<span class=\"token punctuation\">.</span>'<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">File <span class=\"token string\">\"&lt;ipython-input-13-5ff4166757df>\"</span><span class=\"token punctuation\">,</span> line 3\r\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung'</span>s Book<span class=\"token punctuation\">.</span>'<span class=\"token punctuation\">)</span>\r\n                        ^\r\nSyntaxError: invalid syntax</code></pre></div>\n<br>\n<p><strong>여러줄에 걸친 긴 문자열</strong>도 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 여러줄에 걸친 긴 문자열</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"여러 줄에 걸친\r\n            문자열은 큰 따옴표로\r\n       감쌀수 있습니다.\"\"\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''여러 줄에 걸친\r\n            문자열은 작은 따옴표로도\r\n       감쌀수 있습니다.'''</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">여러 줄에 걸친\r\n            문자열은 큰 따옴표로\r\n       감쌀수 있습니다<span class=\"token punctuation\">.</span>\r\n여러 줄에 걸친\r\n            문자열은 작은 따옴표로도\r\n       감쌀수 있습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\">1. 파이썬 내장 함수</a></p>\n</li>\n<li>\n<p><a href=\"#2-print-%ED%95%A8%EC%88%98\">2. Print 함수</a></p>\n<ul>\n<li><a href=\"#1-%EC%A3%BC%EC%84%9D\">1) 주석</a></li>\n<li><a href=\"#2-print-\">2) print( )</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 14, 2024","title":"Python | 1. 함수, 내장함수, Print 함수","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/function/"}},"prev":{"id":"52dae108-4a4b-5472-adaf-fce605da6411","html":"<p>연산자에는 산술 연산자, 관계 연산자(비교 연산자), 논리 연산자, 대입 연산자가 있다.@</p>\n<br>\n<h2 id=\"1-산술-연산자\" style=\"position:relative;\"><a href=\"#1-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"1 산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 산술 연산자</h2>\n<p>산술 연산자는 가장 기본적인 연산자다.<br>\n대부분의 연산자는 일반적으로 수학에서 사용하는 심볼과 동일하다.<br>\n일반 수학 연산처럼 왼쪽 연산자부터 계산하고 곱셈과 나눗셈이 있다면 먼저 계산한다.<br>\n연산자는 괄호가 있다면 괄호 부분을 먼저 계산한다.<br>\n즉, <strong>괄호도 연산자다.</strong> 괄호는 연산의 우선 순위를 결정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">12\r\n2\r\n2\r\n27</code></pre></div>\n<br>\n<p>나눗셈은 실수, 정수, 나머지 연산자로 나뉜다.</p>\n<ul>\n<li>/는 <strong>실수 나눗셈</strong>이다. 실수 나눗셈이란 나눗셈의 결과가 <strong>실수</strong>로 나오는 것을 말한다.</li>\n<li>//는 <strong>정수 나눗셈</strong>이다. 나눗셈의 결과로 <strong>정수값(몫)을</strong> 반환한다.<br>\n나눗셈 연산 후 소수부분은 버리고 정수부분만 남겨둔다(floor division이라고 한다)</li>\n<li>%는 <strong>나머지 연산자</strong>다. 이름 그대로 <strong>나머지</strong>를 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">3<span class=\"token punctuation\">.</span>3333333333333335\r\n3\r\n1</code></pre></div>\n<br>\n<h2 id=\"2-관계-연산자비교-연산자\" style=\"position:relative;\"><a href=\"#2-%EA%B4%80%EA%B3%84-%EC%97%B0%EC%82%B0%EC%9E%90%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 관계 연산자비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 관계 연산자(비교 연산자)</h2>\n<p>관계 연산자를 하기 전 boolean(불리언, 부울) 자료형을 설명하자면<br>\n<strong>boolean 자료형</strong>은 <strong>True 또는 False</strong>를 값으로 가지는 자료형이다.\r\n첫 글자가 <strong>대문자</strong>로 시작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">True\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'bool'</span>>\r\nFalse</code></pre></div>\n<br>\n<p>관계 연산자의 결과는 True 또는 False이다.<br>\n관계를 검사한다는 의미이기에 관계를 만족하면 True, 그렇지 않으면 False가 된다.<br>\n관계 연산자는 조건문과 반복문 등의 제어문에서 많이 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 같은지</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 다른지</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 큰지</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 작은지</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 크거나 같은지</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 작거나 같은지</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">True\r\nFalse\r\nFalse\r\nTrue\r\nFalse\r\nTrue\r\nTrue\r\nFalse\r\nTrue</code></pre></div>\n<br>\n<h2 id=\"3-논리-연산자\" style=\"position:relative;\"><a href=\"#3-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"3 논리 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 논리 연산자</h2>\n<p>논리 연산자는 <strong>and, or, not</strong>이 있다.<br>\n논리 연산자의 <strong>결과는 True 또는 False</strong>이다.<br>\n또한, 논리 연산자의 피연산자는 논리값이기에 논리 연산자라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># and 연산자는 피연산자 2개가 모두 True인 경우에 True</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># or 연산자는 피연산자 중 1개라도 True인 경우에 True</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> <span class=\"token number\">10</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># not 연산자는 반대</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">False\r\nTrue\r\nTrue\r\nTrue\r\nFalse\r\nTrue\r\nFalse\r\nFalse\r\nFalse\r\nTrue\r\nTrue\r\nTrue\r\nFalse\r\nFalse</code></pre></div>\n<br>\n<h2 id=\"4-대입-연산자\" style=\"position:relative;\"><a href=\"#4-%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"4 대입 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 대입 연산자</h2>\n<p>대입 연산자는 변수에 값을 대입한다.<br>\n2개 이상의 변수에 동시에 대입이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">10\r\n10 20</code></pre></div>\n<br>\n<p>대입 연산자 이외에도 <strong>복합 대입 연산자</strong>가 있다.<br>\n<strong>+=, -=, *=, /=, //=, %=, **=</strong> 들이 복합 대입 연산자다.<br>\n예를 들어 += 연산자는 좌측의 변수값에 더해서 넣는다는 의미다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n\r\na <span class=\"token operator\">+=</span> <span class=\"token number\">20</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">-=</span> <span class=\"token number\">10</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">//=</span> <span class=\"token number\">2</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">%=</span> <span class=\"token number\">2</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">30\r\n20\r\n40\r\n20\r\n0</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\">1. 산술 연산자</a></li>\n<li><a href=\"#2-%EA%B4%80%EA%B3%84-%EC%97%B0%EC%82%B0%EC%9E%90%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\">2. 관계 연산자(비교 연산자)</a></li>\n<li><a href=\"#3-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\">3. 논리 연산자</a></li>\n<li><a href=\"#4-%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90\">4. 대입 연산자</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 17, 2024","title":"Python | 4. 연산자","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/operator/"}},"site":{"siteMetadata":{"siteUrl":"https://xininny.github.io","comments":{"utterances":{"repo":"xininny/xininny.github.io"}}}}},"pageContext":{"slug":"/python/study/input/","nextSlug":"/python/study/function/","prevSlug":"/python/study/operator/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}