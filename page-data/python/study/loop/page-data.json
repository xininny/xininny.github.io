{"componentChunkName":"component---src-templates-blog-template-js","path":"/python/study/loop/","result":{"data":{"cur":{"id":"84d761ee-987e-5c46-b0b9-767dfe35fc2b","html":"<p>반복문은 어떤 작업들이 반복적으로 실행되도록 할 때 사용된다.@</p>\n<br>\n<h2 id=\"1-while-반복문\" style=\"position:relative;\"><a href=\"#1-while-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"1 while 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. while 반복문</h2>\n<p>파이썬은 조건부분의 결과값(불린값)이 True인지 False인지 체크한다.</p>\n<p>조건부분이 <strong>True</strong>면, 파이썬은 반복문의 수행 부분을 실행한다.<br>\n그리고 수행부분이 끝나면 다시 조건부분으로 돌아간다.<br>\n조건부분이 <strong>False</strong>면, 파이썬은 while 반복문의 수행부분을 건너 뛰어 그 이후의 코드를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span>\r\n    i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hello world!\r\nHello world!\r\nHello world!\r\nHello world!\r\nHello world!</code></pre></div>\n<br>\n<h2 id=\"2-for-반복문\" style=\"position:relative;\"><a href=\"#2-for-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"2 for 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. for 반복문</h2>\n<p>while 반복문에 비해 for 반복문은 기능이 더 많다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 문자열 변수 'alphabets\"의 문자들을 순차적으로 출력하는 문장이다.</span>\r\n<span class=\"token comment\"># for 반복문에서 이럴 때 조건 연산자 in을 사용하면 편하다.</span>\r\nalphabets <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdef\"</span>\r\n<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> alphabets<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># alphabets라는 문자열(실제로는 향후에 리스트 등의 자료형을 배우게 되면 iterable 객체) 객체를</span>\r\n<span class=\"token comment\"># 앞에서 부터 순차적으로 하나씩 c라는 변수에 담아서,</span>\r\n<span class=\"token comment\"># for 반복문의 body에서 사용하라</span>\r\n\r\n<span class=\"token comment\"># 한 줄로 출력하고 싶다면</span>\r\n\r\n<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> alphabets<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">a\r\nb\r\nc\r\nd\r\ne\r\nf\r\nabcdef</code></pre></div>\n<br>\n<p>len( )라는 함수는 파이썬에서 sequence 자료형(예: string, bytes, tuple, lsist, or range)<br>\n또는 collection 자료형(예: dictionary, set or frozen set)와 같은 <strong>객체들의 갯수를 반환</strong>하는 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">3\r\n6\r\n0</code></pre></div>\n<br>\n<p>for문은 in 뒤에 범위를 지정해서 <strong>지정된 범위만큼 반복 실행할 수도 있다.</strong></p>\n<ul>\n<li>for 변수 in 범위:<br>\n실행할 문장들<br>\n…</li>\n</ul>\n<p>이때 <strong>범위를 지정하기 위해서 range( ) 함수를 사용</strong>할 수 있다.<br>\nrange( ) 함수를 사용하면서 특정 범위 동안 반복문을 수행할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\n\r\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">+=</span> x\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">55\r\n1\r\n2\r\n3\r\n4\r\n5</code></pre></div>\n<br>\n<h2 id=\"3-break\" style=\"position:relative;\"><a href=\"#3-break\" aria-label=\"3 break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. break</h2>\n<p><strong>while True:</strong> 문장은 무한 반복(끝나지 않는 반복문)을 의미한다.<br>\n그러므로 break문으로 <strong>종료 조건을 체크</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\ni <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n\r\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\r\n   <span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\r\n       <span class=\"token keyword\">break</span>\r\n   total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> i\r\n   i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum from 1 to 10 is\"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">sum <span class=\"token keyword\">from</span> 1 to 10 is 55</code></pre></div>\n<br>\n<h2 id=\"4-continue\" style=\"position:relative;\"><a href=\"#4-continue\" aria-label=\"4 continue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. continue</h2>\n<p>continue문장은 <strong>for문에서 써보면 깔끔</strong>하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"HELLO PYTHON\"</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"AEIOU\"</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">continue</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">H\r\nL\r\nL\r\n\r\nP\r\nY\r\nT\r\nH\r\nN\r\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-while-%EB%B0%98%EB%B3%B5%EB%AC%B8\">1. while 반복문</a></li>\n<li><a href=\"#2-for-%EB%B0%98%EB%B3%B5%EB%AC%B8\">2. for 반복문</a></li>\n<li><a href=\"#3-break\">3. break</a></li>\n<li><a href=\"#4-continue\">4. continue</a></li>\n</ul>\n</div>","excerpt":"반복문은 어떤 작업들이 반복적으로 실행되도록 할 때 사용된다.@ 1. while 반복문 파이썬은 조건부분의 결과값(불린값)이 True인지 False인지 체크한다. 조건부분이 True면, 파이썬은 반복문의 수행 부분을 실행한다. 그리고 수행부분이 끝나면 다시 조건부분으로 돌아간다. 조건부분이 False면, 파이썬은 while 반복문의 수행부분을 건너 뛰어 그 이후의 코드를 실행한다. 2. for 반복문 while 반복문에 비해 for 반복문은 기능이 더 많다. len( )라는 함수는 파이썬에서 sequence 자료형(예: string, bytes, tuple, lsist, or range) 또는 collection 자료형(예: dictionary, set or frozen set)와 같은 객체들의 갯수를 반환하는 함수다. for문은 in 뒤에 범위를 지정해서 지정된 범위만큼 반복 실행할 수도 있다. for 변수 in 범위: 실행할 문장들 … 이때 범위를 지정하기 위해서 range( …","frontmatter":{"date":"February 27, 2024","title":"Python | 14. 반복문","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/loop/"}},"next":{"id":"e3b1833a-e9d5-556e-b6c2-ca4a1ecb1b0a","html":"<p>프로그래밍을 하다보면 변수 값을 비교하거나 체크할 필요가 있는 경우가 있다.<br>\n이때 조건문을 사용한다.<br>\nif 문이 대표적인 조건문이다.@</p>\n<br>\n<h2 id=\"1-if-문\" style=\"position:relative;\"><a href=\"#1-if-%EB%AC%B8\" aria-label=\"1 if 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. if 문</h2>\n<p>if문의 body는 <strong>들여쓰기</strong>를 해야한다.<br>\n들여쓰기는 빈칸 4칸 또는 Tab 키를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token string\">\"is same to\"</span><span class=\"token punctuation\">,</span>  b<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">10 is same to 10</code></pre></div>\n<br>\n<h2 id=\"2-if-else-문\" style=\"position:relative;\"><a href=\"#2-if-else-%EB%AC%B8\" aria-label=\"2 if else 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. if else 문</h2>\n<p>조건이 <strong>True인 경우와 False인 경우 모두 해야하는 일이 있다</strong>면 if else 문을 사용한다.</p>\n<p>if문의 body에는 여러 줄을 적을 수도 있다.<br>\n이를 <strong>block</strong>이라고 한다.<br>\n이를 표시하기 위해서 들여쓰기를 하는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\n\r\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max is\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is the body block of if'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max is\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is the body block of else'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">max is 20\r\nthis is the body block of <span class=\"token keyword\">else</span></code></pre></div>\n<br>\n<h2 id=\"3-if-elif-문\" style=\"position:relative;\"><a href=\"#3-if-elif-%EB%AC%B8\" aria-label=\"3 if elif 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. if elif 문</h2>\n<p>조건을 <strong>여러 개를 비교</strong>해야하는 경우라면 elif문으로 여러 조건을 순차적으로 점검할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n\r\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max is \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min is \"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">elif</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">:</span> <span class=\"token comment\"># else if</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a is same to b\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max is \"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max is \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">a is same to b</code></pre></div>","frontmatter":{"date":"February 26, 2024","title":"Python | 13. if 조건문","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/if/"}},"prev":{"id":"c18c8414-5c82-5efc-a2bd-7249eaa00a8a","html":"","frontmatter":{"date":"March 19, 2024","title":"Node. js | 1. Node. js 첫걸음","categories":"Node.js","author":"xininny","emoji":"𝐍"},"fields":{"slug":"/node.js/study/intro/"}},"site":{"siteMetadata":{"siteUrl":"https://xininny.github.io","comments":{"utterances":{"repo":"xininny/xininny.github.io"}}}}},"pageContext":{"slug":"/python/study/loop/","nextSlug":"/python/study/if/","prevSlug":"/node.js/study/intro/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}