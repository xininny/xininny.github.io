{"componentChunkName":"component---src-templates-blog-template-js","path":"/python/study/function/user/","result":{"data":{"cur":{"id":"b1e1b4d9-5ad5-5335-be14-2aa707b71017","html":"<p>프로그램이 길어지면 관련있는 부분들을 함수로 <strong>나누어서</strong> 프로그래밍할 필요가 있다.@</p>\n<br>\n<h2 id=\"1-특정한-일만-하는-함수\" style=\"position:relative;\"><a href=\"#1-%ED%8A%B9%EC%A0%95%ED%95%9C-%EC%9D%BC%EB%A7%8C-%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\" aria-label=\"1 특정한 일만 하는 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 특정한 일만 하는 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 함수를 정의하는 형식</span>\r\n<span class=\"token triple-quoted-string string\">\"\"\"\r\ndef 함수명():\r\n    함수 바디\r\n\"\"\"</span>\r\n<span class=\"token comment\"># 함수 정의</span>\r\n<span class=\"token comment\"># 아래의 함수는 파라미터를 받지도 않고, 반환값도 없다.</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 함수 사용</span>\r\ngreet1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ngreet1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hi\r\nHi</code></pre></div>\n<br>\n<h2 id=\"2-함수의-결과값을-반환하는-함수\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98%EC%9D%98-%EA%B2%B0%EA%B3%BC%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\" aria-label=\"2 함수의 결과값을 반환하는 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수의 결과값을 반환하는 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 반환하는 값을 return 문장으로 적어주면 된다.</span>\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello'</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>greet2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nmsg <span class=\"token operator\">=</span> greet2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\r\n\r\ngreet2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hello\r\nHello\r\n <span class=\"token string\">'Hello'</span></code></pre></div>\n<br>\n<h2 id=\"3-함수가-처리할-값을-파라미터로-전달받는-함수\" style=\"position:relative;\"><a href=\"#3-%ED%95%A8%EC%88%98%EA%B0%80-%EC%B2%98%EB%A6%AC%ED%95%A0-%EA%B0%92%EC%9D%84-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A1%9C-%EC%A0%84%EB%8B%AC%EB%B0%9B%EB%8A%94-%ED%95%A8%EC%88%98\" aria-label=\"3 함수가 처리할 값을 파라미터로 전달받는 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 함수가 처리할 값을 파라미터로 전달받는 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">greet3</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\r\n\r\ngreet3<span class=\"token punctuation\">(</span><span class=\"token string\">'Hi!'</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet3_2</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You said:\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\r\n\r\ngreet3_2<span class=\"token punctuation\">(</span><span class=\"token string\">'Hi~~'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hi!\r\nYou said: Hi~~</code></pre></div>\n<br>\n<h2 id=\"4-파라미터-값을-전달받고-결과값을-반환하는-함수\" style=\"position:relative;\"><a href=\"#4-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EA%B0%92%EC%9D%84-%EC%A0%84%EB%8B%AC%EB%B0%9B%EA%B3%A0-%EA%B2%B0%EA%B3%BC%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\" aria-label=\"4 파라미터 값을 전달받고 결과값을 반환하는 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 파라미터 값을 전달받고, 결과값을 반환하는 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add function is called.'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b\r\n\r\nc <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\r\nc <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">add <span class=\"token keyword\">function</span> is called<span class=\"token punctuation\">.</span>\r\n3\r\nadd <span class=\"token keyword\">function</span> is called<span class=\"token punctuation\">.</span>\r\n6</code></pre></div>\n<br>\n<h2 id=\"5-반환\" style=\"position:relative;\"><a href=\"#5-%EB%B0%98%ED%99%98\" aria-label=\"5 반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 반환</h2>\n<p>파이썬에서 모든 함수는 값을 반환(return)한다고 했다.<br>\nprint( )함수는 None이라는 값을 반환한다.</p>\n<p>C언어와 달라지는 파이썬 함수의 특성이 있다.<br>\nC언어는 함수를 정의(definition) 할 때 함수의 반환값이 있으면, 그 반환값의 자료형을 명시해야 한다.</p>\n<p>하지만 파이썬은 다르다.<br>\n함수가 값을 반환할지 여부를 함수를 정의할 때 <strong>동적 타입 바인딩</strong>이기에 명시할 필요가 없다.</p>\n<p>함수의 끝에 명시적인 return 문장이 없거나, return 문장만 있고,<br>\n실제로 반환하는 값이 없는 경우에는 <strong>자동으로 None값을 반환</strong>한다.</p>\n<p>이로써 파이썬의 모든 함수는 값을 반환하도록 되어있다.<br>\n<strong>파이썬의 함수는 모두 값을 반환한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">greet4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>greet4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>greet5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hi\r\nNone\r\nHi\r\nNone</code></pre></div>\n<br>\n<p>파이썬은 <strong>2개 이상의 값을 반환</strong>할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">arithmetic_operation</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">,</span> a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">,</span> a<span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> a<span class=\"token operator\">/</span>b\r\n\r\nc <span class=\"token operator\">=</span> arithmetic_operation<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span>>\r\n<span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>1<span class=\"token punctuation\">,</span> 2<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">.</span>5<span class=\"token punctuation\">)</span>\r\n3\r\n<span class=\"token operator\">-</span>1</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%ED%8A%B9%EC%A0%95%ED%95%9C-%EC%9D%BC%EB%A7%8C-%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\">1. 특정한 일만 하는 함수</a></li>\n<li><a href=\"#2-%ED%95%A8%EC%88%98%EC%9D%98-%EA%B2%B0%EA%B3%BC%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\">2. 함수의 결과값을 반환하는 함수</a></li>\n<li><a href=\"#3-%ED%95%A8%EC%88%98%EA%B0%80-%EC%B2%98%EB%A6%AC%ED%95%A0-%EA%B0%92%EC%9D%84-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A1%9C-%EC%A0%84%EB%8B%AC%EB%B0%9B%EB%8A%94-%ED%95%A8%EC%88%98\">3. 함수가 처리할 값을 파라미터로 전달받는 함수</a></li>\n<li><a href=\"#4-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EA%B0%92%EC%9D%84-%EC%A0%84%EB%8B%AC%EB%B0%9B%EA%B3%A0-%EA%B2%B0%EA%B3%BC%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98\">4. 파라미터 값을 전달받고, 결과값을 반환하는 함수</a></li>\n<li><a href=\"#5-%EB%B0%98%ED%99%98\">5. 반환</a></li>\n</ul>\n</div>","excerpt":"프로그램이 길어지면 관련있는 부분들을 함수로 나누어서 프로그래밍할 필요가 있다.@ 1. 특정한 일만 하는 함수 2. 함수의 결과값을 반환하는 함수 3. 함수가 처리할 값을 파라미터로 전달받는 함수 4. 파라미터 값을 전달받고, 결과값을 반환하는 함수 5. 반환 파이썬에서 모든 함수는 값을 반환(return)한다고 했다. print( )함수는 None이라는 값을 반환한다. C언어와 달라지는 파이썬 함수의 특성이 있다. C언어는 함수를 정의(definition) 할 때 함수의 반환값이 있으면, 그 반환값의 자료형을 명시해야 한다. 하지만 파이썬은 다르다. 함수가 값을 반환할지 여부를 함수를 정의할 때 동적 타입 바인딩이기에 명시할 필요가 없다. 함수의 끝에 명시적인 return 문장이 없거나, return 문장만 있고, 실제로 반환하는 값이 없는 경우에는 자동으로 None값을 반환한다. 이로써 파이썬의 모든 함수는 값을 반환하도록 되어있다. 파이썬의 함수는 모두 값을 반환한다. 파이썬…","frontmatter":{"date":"February 28, 2024","title":"Python | 15. 사용자 정의 함수","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/function/user/"}},"next":{"id":"84d761ee-987e-5c46-b0b9-767dfe35fc2b","html":"<p>반복문은 어떤 작업들이 반복적으로 실행되도록 할 때 사용된다.@</p>\n<br>\n<h2 id=\"1-while-반복문\" style=\"position:relative;\"><a href=\"#1-while-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"1 while 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. while 반복문</h2>\n<p>파이썬은 조건부분의 결과값(불린값)이 True인지 False인지 체크한다.</p>\n<p>조건부분이 <strong>True</strong>면, 파이썬은 반복문의 수행 부분을 실행한다.<br>\n그리고 수행부분이 끝나면 다시 조건부분으로 돌아간다.<br>\n조건부분이 <strong>False</strong>면, 파이썬은 while 반복문의 수행부분을 건너 뛰어 그 이후의 코드를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span>\r\n    i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Hello world!\r\nHello world!\r\nHello world!\r\nHello world!\r\nHello world!</code></pre></div>\n<br>\n<h2 id=\"2-for-반복문\" style=\"position:relative;\"><a href=\"#2-for-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"2 for 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. for 반복문</h2>\n<p>while 반복문에 비해 for 반복문은 기능이 더 많다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 문자열 변수 'alphabets\"의 문자들을 순차적으로 출력하는 문장이다.</span>\r\n<span class=\"token comment\"># for 반복문에서 이럴 때 조건 연산자 in을 사용하면 편하다.</span>\r\nalphabets <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdef\"</span>\r\n<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> alphabets<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># alphabets라는 문자열(실제로는 향후에 리스트 등의 자료형을 배우게 되면 iterable 객체) 객체를</span>\r\n<span class=\"token comment\"># 앞에서 부터 순차적으로 하나씩 c라는 변수에 담아서,</span>\r\n<span class=\"token comment\"># for 반복문의 body에서 사용하라</span>\r\n\r\n<span class=\"token comment\"># 한 줄로 출력하고 싶다면</span>\r\n\r\n<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> alphabets<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">a\r\nb\r\nc\r\nd\r\ne\r\nf\r\nabcdef</code></pre></div>\n<br>\n<p>len( )라는 함수는 파이썬에서 sequence 자료형(예: string, bytes, tuple, lsist, or range)<br>\n또는 collection 자료형(예: dictionary, set or frozen set)와 같은 <strong>객체들의 갯수를 반환</strong>하는 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">3\r\n6\r\n0</code></pre></div>\n<br>\n<p>for문은 in 뒤에 범위를 지정해서 <strong>지정된 범위만큼 반복 실행할 수도 있다.</strong></p>\n<ul>\n<li>for 변수 in 범위:<br>\n실행할 문장들<br>\n…</li>\n</ul>\n<p>이때 <strong>범위를 지정하기 위해서 range( ) 함수를 사용</strong>할 수 있다.<br>\nrange( ) 함수를 사용하면서 특정 범위 동안 반복문을 수행할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\n\r\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">+=</span> x\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">55\r\n1\r\n2\r\n3\r\n4\r\n5</code></pre></div>\n<br>\n<h2 id=\"3-break\" style=\"position:relative;\"><a href=\"#3-break\" aria-label=\"3 break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. break</h2>\n<p><strong>while True:</strong> 문장은 무한 반복(끝나지 않는 반복문)을 의미한다.<br>\n그러므로 break문으로 <strong>종료 조건을 체크</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\ni <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n\r\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\r\n   <span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\r\n       <span class=\"token keyword\">break</span>\r\n   total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> i\r\n   i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum from 1 to 10 is\"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">sum <span class=\"token keyword\">from</span> 1 to 10 is 55</code></pre></div>\n<br>\n<h2 id=\"4-continue\" style=\"position:relative;\"><a href=\"#4-continue\" aria-label=\"4 continue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. continue</h2>\n<p>continue문장은 <strong>for문에서 써보면 깔끔</strong>하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"HELLO PYTHON\"</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"AEIOU\"</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">continue</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">H\r\nL\r\nL\r\n\r\nP\r\nY\r\nT\r\nH\r\nN\r\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-while-%EB%B0%98%EB%B3%B5%EB%AC%B8\">1. while 반복문</a></li>\n<li><a href=\"#2-for-%EB%B0%98%EB%B3%B5%EB%AC%B8\">2. for 반복문</a></li>\n<li><a href=\"#3-break\">3. break</a></li>\n<li><a href=\"#4-continue\">4. continue</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 27, 2024","title":"Python | 14. 반복문","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/loop/"}},"prev":{"id":"dc35c14d-b9b4-5797-a2b4-e1ca11fa6253","html":"<p>함수란 우리가 알고있는 개념처럼 주어진 입력(input)에 대해서 의도된 출력(output)를 전달하는 역할을 한다.@</p>","frontmatter":{"date":"February 29, 2024","title":"Python | 16. 함수의 이해","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/study/function/advance/"}},"site":{"siteMetadata":{"siteUrl":"https://xininny.github.io","comments":{"utterances":{"repo":"xininny/xininny.github.io"}}}}},"pageContext":{"slug":"/python/study/function/user/","nextSlug":"/python/study/loop/","prevSlug":"/python/study/function/advance/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}