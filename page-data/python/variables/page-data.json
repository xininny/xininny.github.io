{"componentChunkName":"component---src-templates-blog-template-js","path":"/python/variables/","result":{"data":{"cur":{"id":"38326eb1-6ed7-55b5-8ad4-51932b582f1c","html":"<p>컴퓨터는 사용하는 데이터를 주기억장치에 보관해서 사용한다.<br>\n이 값을 CPU로 가져와서 사용하려면, 그 변수가 위치한 곳의 주소를 일일이 기억해야한다.<br>\n그게 귀찮아서, 이름을 붙여서 사용하는데<br>\n그것이 바로 <strong>변수</strong>다.@</p>\n<br>\n<h2 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h2>\n<p>변수의 이름은 <strong>기능/역할/의미</strong>를 파악할 수 있도록 상세하게 만드는 것이 좋다.<br>\nunderscore(_)를 통해서 변수의 이름을 만드는 것이 일반적이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래는 다양한 변수를 만들고, 원하는 값을 저장해서 사용</span>\r\n\r\nmy_number <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\"># 정수형 변수</span>\r\nmy_name   <span class=\"token operator\">=</span> <span class=\"token string\">\"Kim\"</span> <span class=\"token comment\"># 문자열 변수</span>\r\nmy_height <span class=\"token operator\">=</span> <span class=\"token number\">172.3</span> <span class=\"token comment\"># 실수형 변수</span>\r\nis_middle_school <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 불리언(boolean) 변수</span></code></pre></div>\n<br>\n<p>변수에는 다양한 형태의 ‘값’들이 있다.</p>\n<p>수학 시간에 사용하는 자연수, 정수, 실수, 허수들처럼 컴퓨터에서도 다양한 형태의 값들을 사용할 수 있다.<br>\n이를 <strong>자료형</strong>(data types)이라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 변수가 가지고 있는 값을 print() 함수로 출력할 수 있음</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_number<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_name<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_height<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_middle_school<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">100\r\nKim\r\n172<span class=\"token punctuation\">.</span>3\r\nTrue</code></pre></div>\n<br>\n<p>type( ) 함수는 파라미터로 주어지는 변수의 type(자료형)을 <strong>반환</strong>한다.\r\ntype( ) 함수는 파이썬 내장 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 변수의 자료형은 type() 함수로 확인할 수 있음</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>is_middle_school<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span>>\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>>\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span>>\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'bool'</span>></code></pre></div>\n<br>\n<p>print와 type함수를 응용해서 print(type(my_number))를 만들 수 있다.<br>\n이 문장은 type(my_number)라는 함수가 가장 먼저 실행된다.<br>\n이 type( ) 함수는 파라미터의 자료형을 <strong>반환</strong>한다.<br>\nprint( ) 함수는 반환된 <strong>그 값</strong>을 출력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 함수의 반환값을 아래와 같이 변수에 넣어서 사용 가능</span>\r\na <span class=\"token operator\">=</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_name<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>>\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>></code></pre></div>\n<br>\n<p>그리고 변수는 당연히 <strong>수정할 수 있다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 변수에 새로운 값을 넣으면 기존 값은 지워지고 새로운 값으로 대체됨</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Boolean 자료형은 True 또는 False 값만 저장할 수 있음</span>\r\n<span class=\"token comment\"># True/ False의 첫 글자는 '대문자'라는 점에 유의(파이썬은 대문자와 소문자를 구별)</span>\r\nis_middle_school <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_middle_school<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">10\r\n20\r\nFalse</code></pre></div>\n<br>\n<p>파이썬은 <strong>동적 타입 바인딩</strong>이라서 프로그램 실행 중에 변수의 자료형을 바꿀 수 있다.<br>\n동적 타입 바인딩(dynamic type binding)은 파이썬에서 아주 중요한 개념이다.<br>\n이 점이 C 언어와 같은 정적 타입 바인딩 언어와 큰 차이점이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 변수에는 아무런 값이나 저장할 수 있음</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token number\">10.1</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token string\">\"fasdfasfdsfsadfsdadsafsdafsdafsdafds\"</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 변수에 값을 대입하고 이를 이용해서 수식 계산을 해보기</span>\r\n\r\ni <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nj <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\n\r\nadd <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> j <span class=\"token comment\"># 덧셈 연산자</span>\r\nmultiplication <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> j <span class=\"token comment\"># 곱셈 연산자</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"add: \"</span><span class=\"token punctuation\">,</span> add<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"multi: \"</span><span class=\"token punctuation\">,</span> multiplication<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">10\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span>>\r\n10<span class=\"token punctuation\">.</span>1\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span>>\r\nfasdfasfdsfsadfsdadsafsdafsdafsdafds\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>>\r\nadd:  30\r\nmulti:  200</code></pre></div>","excerpt":"컴퓨터는 사용하는 데이터를 주기억장치에 보관해서 사용한다. 이 값을 CPU로 가져와서 사용하려면, 그 변수가 위치한 곳의 주소를 일일이 기억해야한다. 그게 귀찮아서, 이름을 붙여서 사용하는데 그것이 바로 변수다.@ 변수 변수의 이름은 기능/역할/의미를 파악할 수 있도록 상세하게 만드는 것이 좋다. underscore(_)를 통해서 변수의 이름을 만드는 것이 일반적이다. 변수에는 다양한 형태의 ‘값’들이 있다. 수학 시간에 사용하는 자연수, 정수, 실수, 허수들처럼 컴퓨터에서도 다양한 형태의 값들을 사용할 수 있다. 이를 자료형(data types)이라고 한다. type( ) 함수는 파라미터로 주어지는 변수의 type(자료형)을 반환한다.\r\ntype( ) 함수는 파이썬 내장 함수이다. print와 type함수를 응용해서 print(type(my_number))를 만들 수 있다. 이 문장은 type(my_number)라는 함수가 가장 먼저 실행된다. 이 type( ) 함수는 파라미터의…","frontmatter":{"date":"February 15, 2024","title":"Python | 2. 변수(variables)","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/variables/"}},"next":{"id":"6d1ea9e9-5dd4-5f96-aec1-02d0e6a4e979","html":"<p>파이썬에는 다양한 종류의 함수가 있다.</p>\n<ul>\n<li>내장 함수</li>\n<li>외장 함수</li>\n<li>사용자 정의 함수@</li>\n</ul>\n<br>\n<h2 id=\"1-파이썬-내장-함수\" style=\"position:relative;\"><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\" aria-label=\"1 파이썬 내장 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파이썬 내장 함수</h2>\n<p>내장 함수란 파이썬 인터프리터가 설치될 때 별도의 작업없이 바로 사용 가능한 함수들이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 간단한 내장 함수들</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 절대값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최대값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최소값</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 지수승</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 소수점 아래에 1자리만 남기고 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 소수점 아래에 3자리만 남기고 반올림</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.1415</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\n40\r\n1\r\n1024\r\n2\r\n3\r\n3<span class=\"token punctuation\">.</span>1\r\n3<span class=\"token punctuation\">.</span>142\r\n3<span class=\"token punctuation\">.</span>1415</code></pre></div>\n<p>아래 링크를 접속하면 내장함수 이름들을 볼 수 있다.</p>\n<ul>\n<li>\n<p><a href=\"https://docs.python.org/ko/3/library/functions.html\" target=\"_blank\"> Python library functions </a></p>\n</li>\n<li>\n<p><a href=\"https://wikidocs.net/32\" target=\"_blank\"> 점프 투 파이썬 내장 함수 </a></p>\n</li>\n<li>\n<p>참고</p>\n<ul>\n<li>추상화 : 복잡한 세부사항을 숨기고, 주요 기능에만 집중할 수 있게 해주는 개념 (변수, 함수, 객체)</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-print-함수\" style=\"position:relative;\"><a href=\"#2-print-%ED%95%A8%EC%88%98\" aria-label=\"2 print 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Print 함수</h2>\n<h3 id=\"1-주석\" style=\"position:relative;\"><a href=\"#1-%EC%A3%BC%EC%84%9D\" aria-label=\"1 주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 주석</h3>\n<p>Sharp(샵, <strong>#</strong>) 기호로 시작되는 줄은 주석이다.<br>\n주석은 프로그램의 실행과는 상관없이 코드의 설명 등에 도움되는 정보를 기입하는 문장이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Sharp(샵) 기호로 시작되는 줄은 주석이다.</span>\r\n<span class=\"token comment\"># 즉, 지금 읽고 있는 이 줄들은 모두 주석이다.</span></code></pre></div>\n<h3 id=\"2-print-\" style=\"position:relative;\"><a href=\"#2-print-\" aria-label=\"2 print  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) print( )</h3>\n<p>print( ) 함수는 괄호( ) 안의 <strong>내용물(파라미터)을</strong> 화면에 출력해준다.</p>\n<p>print( ) 함수를 통해 <strong>문자열</strong>도 출력할 수 있다.<br>\nprint( ) 함수의 괄호 내부에 출력할 내용을 적어주면 되기 때문이다.<br>\n” ” 또는 ’ ‘로 묶인 부분을 문자열(string)이라고 한다.<br>\n문자열은 향후에 자세하게 설명한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래는 1이라는 숫자값을 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 아래는 Hellow World!라는 문자열을 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 숫자 1을 출력하고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 문자열 \"1\"을 출력하고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 위의 2개의 출력 결과는 화면 상에서는 동일하다,</span>\r\n<span class=\"token comment\"># 숫자 1과 문자열 \"1\"은 컴퓨터 내부적으로 저장되는 형식이 다를 뿐이다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\nHello World!\r\n1\r\n1\r\n2</code></pre></div>\n<br>\n<p>print( ) 함수의 괄호 내부에 적는 값을 <strong>파라미터</strong>(parameters, 매개 변수)라고 한다.<br>\nprint( ) 함수는 파라미터가 없으면 아무것도 출력되지 않고 줄만 바뀐다.</p>\n<p>print( ) 함수는 출력한 후 자동으로 줄을 바꿔준다.<br>\n만약 줄을 바꾸고 싶다면 문자열 내에 \\n 기호를 붙인다.<br>\n<strong>\\n</strong> : 줄을 바꾸어주는 역할</p>\n<p>만약 줄을 바꾸고 싶지 않다면 <strong>end=\"\"</strong> 를 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래는 1 비어있는 줄 2 를 출력한다.</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 만약 줄을 바꾸고 싶다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 문자열 내에 \\n 기호는 줄을 바꾸어주는 역할</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 만약 줄을 바꾸고 싶지 않다면</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 위의 사항에서 무엇을 알 수있을까?</span>\r\n<span class=\"token comment\"># print() 함수에는 파라미터가 1개 또는 2개(사실은 더 있을 수 있다)가 될 수 있다는 사실</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">1\r\n\r\n2\r\nHello\r\nPython\r\nfirstsecond</code></pre></div>\n<br>\n<p>수식 계산은 계산이 완료된 최종 결과가 출력된다.\r\nprint( ) 함수를 실행하기 전에, 파라미터를 먼저 계산하고, 계산된 결과가 print( ) 함수에게 전달된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">38</code></pre></div>\n<br>\n<p>여러 값을 <strong>콤마</strong>(,)로 구분해서 출력할 수 있다.</p>\n<p>문자열은 <strong>큰 따옴표</strong>(” “)와 <strong>작은 따옴표</strong>(’ ’) 모두 사용할 수 있다.</p>\n<p>필요한 경우는 큰 따옴표 내부에 작은 따옴표를, 작은 따옴표 내부에 큰 따옴표를 ‘문자’의 의미로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 여러 값을 콤마(,)로 구분해서 출력</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum is:\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 큰 따옴표와 작은 따옴표 모두 사용</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 큰 따옴표 내부에 작은 따옴표, 작은 따옴표 내부에 큰 따옴표</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is Jung's Book.\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung\"s Book.'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">sum is: 10\r\nHello\r\nHello\r\nThis is Jung's Book<span class=\"token punctuation\">.</span>\r\nThis is Jung\"s Book<span class=\"token punctuation\">.</span></code></pre></div>\n<br>\n<p>하지만 <strong>에러가 나는 경우</strong>도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 어디가 문자열의 끝인지 불 명확하기 때문</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung'</span>s Book<span class=\"token punctuation\">.</span>'<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">File <span class=\"token string\">\"&lt;ipython-input-13-5ff4166757df>\"</span><span class=\"token punctuation\">,</span> line 3\r\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">'This is Jung'</span>s Book<span class=\"token punctuation\">.</span>'<span class=\"token punctuation\">)</span>\r\n                        ^\r\nSyntaxError: invalid syntax</code></pre></div>\n<br>\n<p><strong>여러줄에 걸친 긴 문자열</strong>도 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 여러줄에 걸친 긴 문자열</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"여러 줄에 걸친\r\n            문자열은 큰 따옴표로\r\n       감쌀수 있습니다.\"\"\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''여러 줄에 걸친\r\n            문자열은 작은 따옴표로도\r\n       감쌀수 있습니다.'''</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">여러 줄에 걸친\r\n            문자열은 큰 따옴표로\r\n       감쌀수 있습니다<span class=\"token punctuation\">.</span>\r\n여러 줄에 걸친\r\n            문자열은 작은 따옴표로도\r\n       감쌀수 있습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\">1. 파이썬 내장 함수</a></p>\n</li>\n<li>\n<p><a href=\"#2-print-%ED%95%A8%EC%88%98\">2. Print 함수</a></p>\n<ul>\n<li><a href=\"#1-%EC%A3%BC%EC%84%9D\">1) 주석</a></li>\n<li><a href=\"#2-print-\">2) print( )</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 14, 2024","title":"Python | 1. 함수, 내장함수, Print 함수","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/function/"}},"prev":{"id":"0ee8bdc8-7141-5ee2-9199-01b814c8cac0","html":"<p>print( ) 함수와 반대 기능을 수행한다.@</p>\n<br>\n<h2 id=\"input-함수\" style=\"position:relative;\"><a href=\"#input-%ED%95%A8%EC%88%98\" aria-label=\"input 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>input 함수</h2>\n<p>print( ) 함수와 input( ) 함수를 연속해서 사용함으로써 입력값을 확인할 수 있다.<br>\n입력값의 자료형을 알아볼 땐 <strong>type( )를</strong> 사용한다.<br>\n입력값은 무조건 문자열이고, 숫자를 입력하더라도 문자열로 입력된다.<br>\n즉 input 함수는 <strong>문자열을 반환</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please, input a number:'</span><span class=\"token punctuation\">)</span>\r\na <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You entered:'</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 또는 아래와 같이 input( ) 함수를 사용할 수도 있음</span>\r\n<span class=\"token comment\"># input() 함수에 문자열을 파라미터로 사용하면 메세지 출력 후에 값을 입력받을 수 있음</span>\r\n\r\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please, input a second number:'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You entered:'</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Please<span class=\"token punctuation\">,</span> input a number:\r\nlinux\r\nYou entered: linux\r\n&lt;<span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span>>\r\nPlease<span class=\"token punctuation\">,</span> input a second number:123\r\nYou entered: 123</code></pre></div>\n<br>\n<p>input( ) 함수는 문자열을 반환한다.<br>\n따라서 정수를 입력받고 싶으면 int( ) 함수를 이용해서 문자열을 숫자로 변환할 수 있다<br>\n즉, input( ) 함수는 문자열로 입력받기 때문에 <strong>숫자를 입력받으려면 int( ) 함수로 변환해서 사용</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">msg <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter any number and l will add 10 to the number: \"</span><span class=\"token punctuation\">)</span>\r\nno <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You entered\"</span><span class=\"token punctuation\">,</span> no<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'll add\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"to it\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"So, the result is...\"</span><span class=\"token punctuation\">,</span> no <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Enter any number and l will add 10 to the number: 123<span class=\"token punctuation\">.</span>1\r\nYou entered 123\r\nI'll add 10 to it\r\nSo<span class=\"token punctuation\">,</span> the result is<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> 133</code></pre></div>\n<br>\n<p>int( ) 함수를 통해서 파라미터를 int 자료형으로 변경할 수 있다고 했지만 아래 문장은 에러다.<br>\n“1”, “123” 처럼 <strong>숫자로 된 문자열만 변경이 가능</strong>하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">ValueError                                Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>\r\n&lt;ipython-input-11-3688a62e4fa1> in &lt;module><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n      2 <span class=\"token comment\"># 그렇지만 아래 문장은 에러다</span>\r\n      3 <span class=\"token comment\"># \"1\", \"123\" 처럼 숫자로 된 문자열만 변경이 가능하다.</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>> 4 print<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span><span class=\"token string\">\"AA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nValueError: invalid literal <span class=\"token keyword\">for</span> int<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> with base 10: <span class=\"token string\">'AA'</span></code></pre></div>","frontmatter":{"date":"February 16, 2024","title":"Python | 3. input 함수","categories":"Python","author":"xininny","emoji":"𝐏"},"fields":{"slug":"/python/input/"}},"site":{"siteMetadata":{"siteUrl":"https://xininny.github.io","comments":{"utterances":{"repo":"xininny/xininny.github.io"}}}}},"pageContext":{"slug":"/python/variables/","nextSlug":"/python/function/","prevSlug":"/python/input/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}