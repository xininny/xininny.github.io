{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Python","result":{"pageContext":{"currentCategory":"Python","categories":["All","Node.js","Python","PROJECT","RECORD"],"edges":[{"node":{"id":"ad89880c-4951-56f5-a6a1-496cca8545da","excerpt":"문자열은 하나 이상 연속된 문자(character)들의 나열이다.@ 1. 문자열 생성 큰 따옴표 또는 작은 따옴표로 문자열를 사용할 수 있다. 큰 따옴표 내부의 작은 따옴표(또는 작은 따옴표 내부의 큰 따옴표)는 일반 문자로 고려된다. 큰 따옴표 또는 작은 따옴표 3개로 2줄 이상의 긴 문자열을 사용할 수 있다. str( ) 함수를 이용해서 숫자를 문자로 변환할 수 있다(명시적 형 변환). 2. 문자열 포맷팅 1) formatting letter 사용 문자열을 출력하는 형식을 지정(formatting)하는 기능을 보자. 문자열 포맷팅을 쓰는 이유 %d, %s와 같은 포맷 문자 위치에 % 뒤의 값이 삽입된다. 포매팅된 결과물이 바로 문자열이다. 2개 이상의 값을 넣고 싶으면 괄호 안에 콤마(,)로 구분해서 적어주면 된다. 2) 문자열의 format( ) 메쏘드 사용 메쏘드는 클래스 개념과 관련있다. 문자열의 format( ) 메쏘드를 사용할 수도 있다. { }안의 숫자로 위치를 설정…","fields":{"slug":"/python/study/string/"},"frontmatter":{"categories":"Python","title":"Python | 11. 문자열","date":"February 24, 2024"}},"next":{"fields":{"slug":"/python/study/set/"}},"previous":{"fields":{"slug":"/node.js/study/intro/"}}},{"node":{"id":"935c0c2e-79d7-583c-955a-8d030977a0f2","excerpt":"집합(set)은 집합에 관련된 것을 쉽게 처리하기 위해 만든 자료형이다.@ 1. Python에서 집합 만들기 파이썬에서 집합은 set 키워드를 사용해 만든다. 집합은 고유한 요소의 정렬되지 않은 모음이다. 목록이나 문자열을 set 키워드에 전달해 집합을 만들 수 있다. set( )을 사용해 빈 집합을 만들 수 있다. 2. 세트의 특징 세트에는 두 가지 주요 기능이 있다. 중복 값을 허용하지 않는 것과 순서가 지정되는 않는 것이다. 따라서 컬렉션에서 중복 항목을 제거하는 데 유용하며 순서가 지정되지 않았기에 인덱싱을 지원하지 않는다. 집합의 요소에 액세스하려면 먼저 집합을 목록이나 튜플로 변환해야 한다. 3. 세트 작업 집합은 교집합, 합집합 또는 차이 찾기 같은 작업을 수행하려는 경우에 유용하다. 두 세트의 교집합은 &연산자 또는 intersection( )함수를 사용해 찾는다. 두 집합의 합집합은 |연산자 또는 union( ) 함수를 사용해 찾으며, 두 집합 간의 차이는 -연산자…","fields":{"slug":"/python/study/set/"},"frontmatter":{"categories":"Python","title":"Python | 10. Set 자료형","date":"February 23, 2024"}},"next":{"fields":{"slug":"/python/study/tuple/"}},"previous":{"fields":{"slug":"/python/study/string/"}}},{"node":{"id":"e0a3247c-acdb-54fa-a744-94ce767e22d9","excerpt":"튜플은 리스트와 유사하지만 중요한 차이점은 한 번 선언된 튜플의 요소는 수정, 추가, 삭제가 불가능하다는 것이다.@ 튜플(Tuple) 튜플은 불변 자료형이다. 이러한 속석으로 인해 튜플은 프로그램이 실행되는 동안 변하지 않아야 하는 값들을 저장하는 데 적합하다. 튜플을 만들 때 괄호( )를 사용하고, 요소들은 쉼표(,)로 구분한다. 단일 요소를 가진 튜플을 생성할 때는 쉼표를 붙여야 한다.(e.g., t=(1,)) 튜플의 요소에 접근하기 위해 인덱싱이나 슬라이싱을 사용할 수 있다. 또한, 튜플 간의 결합은 +연산자로, 반복은 *연산자로 수행할 수 있다. 하지만, 튜플의 요소를 직접 수정하거나 삭제하려 하면 오류가 발생한다. 이는 튜플의 불변성에 따른 것이다.","fields":{"slug":"/python/study/tuple/"},"frontmatter":{"categories":"Python","title":"Python | 9. Tuple 자료형","date":"February 22, 2024"}},"next":{"fields":{"slug":"/python/study/dictionary/"}},"previous":{"fields":{"slug":"/python/study/set/"}}},{"node":{"id":"b87ba194-00da-5c32-a6ce-01bcb2f8e8f9","excerpt":"딕셔너리는 Key와 Value를 한 쌍으로 가지는 자료형이다.@ Dictionary 자료형","fields":{"slug":"/python/study/dictionary/"},"frontmatter":{"categories":"Python","title":"Python | 8. Dictionary 자료형","date":"February 21, 2024"}},"next":{"fields":{"slug":"/python/study/list/"}},"previous":{"fields":{"slug":"/python/study/tuple/"}}},{"node":{"id":"cb701423-72f6-5a8e-a265-570673d5aa0d","excerpt":"새로운 정보가 있을 때마다 변수를 새로 생성하는 대신, 리스트(list)라는 자료형을 쓰면 하나의 변수만으로도 여러 개의 정보를 저장할 수 있다.@ 1. 리스트 생성 리스트를 생성하는 방법으로 크게 2가지가 있다. 1) 리스트 리터럴(literal)을 사용하는 방법 파이썬에서는 상수라는 명칭을 사용하지 않지만 일단 리터럴(literal)은 상수라고 생각하면 된다 2) list( )함수(생성자)를 사용하는 방법 list는 list( )라는 이름의 함수가 있다. 이를 리스트의 생성자라고 한다. 2. 리스트 항목 접근 리스트는 여러 개의 값을 가지고 있기에 특정 위치의 값을 참조할 필요가 있다. 리스트의 특정 항목의 위치를 대괄호로 인덱스를 지정할 수 있다. 리스트의 첫번째 항목의 인덱스는 0이다. 인덱스 -1은 뒤에서 1번째 값, 뒤에서부터의 순서는 -1부터 시작한다. 리스트의 인덱스가 범위를 벗어나면 에러가 발생한다. 3. 리스트의 리스트(list of list) 리스트의 내부 항목…","fields":{"slug":"/python/study/list/"},"frontmatter":{"categories":"Python","title":"Python | 7. List 자료형","date":"February 20, 2024"}},"next":{"fields":{"slug":"/python/study/datatypes/"}},"previous":{"fields":{"slug":"/python/study/dictionary/"}}},{"node":{"id":"f67266fa-8435-56dd-ad53-d2f50bfb5872","excerpt":"파이썬에서는 실용적이고 많은 자료형이 제공된다.@ 1. 자료형 파이썬은 동적 타입 바인딩 언어이다. 즉, 변수를 선언할 때 어떤 자료형의 값을 저장할 것이라고 미리 정해둘 필요가 없다. 2. 형 변환 1) 자동 형 변환(묵시적 형 변환) 형 변환(type conversion)이 자동으로 일어나는 것을 자동 형 변환(implicit type conversion)이라고 한다. 2) 명시적 형 변환 프로그래머가 형변환을 명령하는 것을 명시적 형 변환(explicit type conversion, type casting)이라고 한다. 자료형의 이름과 동일한 형변환 함수들이 있다. 이는 클래스의 생성자(초기자)를 사용하는 것이다. 따라서 int( ), float( ), str( ), bool( ) 등의 형변환 함수가 있다. 참고 사이트 type conversion 함수 참고 사이트:  type conversion function 1. 자료형 2. 형 변환 1) 자동 형 변환(묵시적 형 변환…","fields":{"slug":"/python/study/datatypes/"},"frontmatter":{"categories":"Python","title":"Python | 6. 자료형과 형 변환","date":"February 19, 2024"}},"next":{"fields":{"slug":"/python/study/indentation/"}},"previous":{"fields":{"slug":"/python/study/list/"}}},{"node":{"id":"97ed4e14-1d24-54c4-9c53-41374ef3e47e","excerpt":"파이썬이 다른 언어와의 모양 상에서의 가장 큰 차이점이 바로 들여쓰기다.@ 들여쓰기 파이썬 언어는 왼쪽으로 맞추지 않으면 에러가 발생한다. 그리고 앞에서 주석에 대해 설명했었다. 전에 주석에 대해 설명했지만 주석에 대해 더 설명하자면 주석을 설명한 페이지 :  Python | 1. 함수, 내장함수, Print 함수  파이썬에서 주석은 들여쓰기를 지키지 않아도 된다.\r\n하지만 파이썬에서 \"\"\" … \"\"\" 문장은 주석이 아니다. 여러줄에 걸친 주석은 큰 따옴표나 작은 따옴표 3개로 감싸는 형식을 쓸 수 있다고 한다. 하지만 명확하게 말하는 이것은 주석이 아니다. 실제로 파이썬의 주석은 #뿐이다. 큰 따옴표와 작은 따옴표로 이루어진 문장은 문자열 상수(문자열 리터럴)를 정의하는 문장이다. 상수를 정의하고 이를 변수에 대입하기 않기에 사용하지 않는다는 의미가 된다. 즉, 따옴표 3개로 묶은 것은 문자열이고 들여쓰기를 하면 안된다. 하지만 아래 문장에서는 에러가 발생한다. 즉, \"\"\" \"\"…","fields":{"slug":"/python/study/indentation/"},"frontmatter":{"categories":"Python","title":"Python | 5. 들여쓰기","date":"February 18, 2024"}},"next":{"fields":{"slug":"/python/study/operator/"}},"previous":{"fields":{"slug":"/python/study/datatypes/"}}},{"node":{"id":"52dae108-4a4b-5472-adaf-fce605da6411","excerpt":"연산자에는 산술 연산자, 관계 연산자(비교 연산자), 논리 연산자, 대입 연산자가 있다.@ 1. 산술 연산자 산술 연산자는 가장 기본적인 연산자다. 대부분의 연산자는 일반적으로 수학에서 사용하는 심볼과 동일하다. 일반 수학 연산처럼 왼쪽 연산자부터 계산하고 곱셈과 나눗셈이 있다면 먼저 계산한다. 연산자는 괄호가 있다면 괄호 부분을 먼저 계산한다. 즉, 괄호도 연산자다. 괄호는 연산의 우선 순위를 결정해준다. 나눗셈은 실수, 정수, 나머지 연산자로 나뉜다. /는 실수 나눗셈이다. 실수 나눗셈이란 나눗셈의 결과가 실수로 나오는 것을 말한다. //는 정수 나눗셈이다. 나눗셈의 결과로 정수값(몫)을 반환한다. 나눗셈 연산 후 소수부분은 버리고 정수부분만 남겨둔다(floor division이라고 한다) %는 나머지 연산자다. 이름 그대로 나머지를 반환한다. 2. 관계 연산자(비교 연산자) 관계 연산자를 하기 전 boolean(불리언, 부울) 자료형을 설명하자면 boolean 자료형은 Tru…","fields":{"slug":"/python/study/operator/"},"frontmatter":{"categories":"Python","title":"Python | 4. 연산자","date":"February 17, 2024"}},"next":{"fields":{"slug":"/python/study/input/"}},"previous":{"fields":{"slug":"/python/study/indentation/"}}},{"node":{"id":"f1a40c05-b3be-5c29-9261-8209e2b9165b","excerpt":"print( ) 함수와 반대 기능을 수행한다.@ input 함수 print( ) 함수와 input( ) 함수를 연속해서 사용함으로써 입력값을 확인할 수 있다. 입력값의 자료형을 알아볼 땐 type( )를 사용한다. 입력값은 무조건 문자열이고, 숫자를 입력하더라도 문자열로 입력된다. 즉 input 함수는 문자열을 반환한다. input( ) 함수는 문자열을 반환한다. 따라서 정수를 입력받고 싶으면 int( ) 함수를 이용해서 문자열을 숫자로 변환할 수 있다 즉, input( ) 함수는 문자열로 입력받기 때문에 숫자를 입력받으려면 int( ) 함수로 변환해서 사용한다. int( ) 함수를 통해서 파라미터를 int 자료형으로 변경할 수 있다고 했지만 아래 문장은 에러다. “1”, “123” 처럼 숫자로 된 문자열만 변경이 가능하다.","fields":{"slug":"/python/study/input/"},"frontmatter":{"categories":"Python","title":"Python | 3. input 함수","date":"February 16, 2024"}},"next":{"fields":{"slug":"/python/study/variables/"}},"previous":{"fields":{"slug":"/python/study/operator/"}}},{"node":{"id":"08252c80-7ba0-5b0d-a17a-edb8c0608118","excerpt":"컴퓨터는 사용하는 데이터를 주기억장치에 보관해서 사용한다. 이 값을 CPU로 가져와서 사용하려면, 그 변수가 위치한 곳의 주소를 일일이 기억해야한다. 그게 귀찮아서, 이름을 붙여서 사용하는데 그것이 바로 변수다.@ 변수 변수의 이름은 기능/역할/의미를 파악할 수 있도록 상세하게 만드는 것이 좋다. underscore(_)를 통해서 변수의 이름을 만드는 것이 일반적이다. 변수에는 다양한 형태의 ‘값’들이 있다. 수학 시간에 사용하는 자연수, 정수, 실수, 허수들처럼 컴퓨터에서도 다양한 형태의 값들을 사용할 수 있다. 이를 자료형(data types)이라고 한다. type( ) 함수는 파라미터로 주어지는 변수의 type(자료형)을 반환한다.\r\ntype( ) 함수는 파이썬 내장 함수이다. print와 type함수를 응용해서 print(type(my_number))를 만들 수 있다. 이 문장은 type(my_number)라는 함수가 가장 먼저 실행된다. 이 type( ) 함수는 파라미터의…","fields":{"slug":"/python/study/variables/"},"frontmatter":{"categories":"Python","title":"Python | 2. 변수(variables)","date":"February 15, 2024"}},"next":{"fields":{"slug":"/python/study/function/"}},"previous":{"fields":{"slug":"/python/study/input/"}}},{"node":{"id":"4abc1300-2a3f-5532-b664-955c50da0753","excerpt":"파이썬에는 다양한 종류의 함수가 있다. 내장 함수 외장 함수 사용자 정의 함수@ 1. 파이썬 내장 함수 내장 함수란 파이썬 인터프리터가 설치될 때 별도의 작업없이 바로 사용 가능한 함수들이다. 아래 링크를 접속하면 내장함수 이름들을 볼 수 있다.  Python library functions   점프 투 파이썬 내장 함수  참고 추상화 : 복잡한 세부사항을 숨기고, 주요 기능에만 집중할 수 있게 해주는 개념 (변수, 함수, 객체) 2. Print 함수 1) 주석 Sharp(샵, #) 기호로 시작되는 줄은 주석이다. 주석은 프로그램의 실행과는 상관없이 코드의 설명 등에 도움되는 정보를 기입하는 문장이다. 2) print( ) print( ) 함수는 괄호( ) 안의 내용물(파라미터)을 화면에 출력해준다. print( ) 함수를 통해 문자열도 출력할 수 있다. print( ) 함수의 괄호 내부에 출력할 내용을 적어주면 되기 때문이다. ” ” 또는 ’ ‘로 묶인 부분을 문자열(string…","fields":{"slug":"/python/study/function/"},"frontmatter":{"categories":"Python","title":"Python | 1. 함수, 내장함수, Print 함수","date":"February 14, 2024"}},"next":{"fields":{"slug":"/project/garida/review/"}},"previous":{"fields":{"slug":"/python/study/variables/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}