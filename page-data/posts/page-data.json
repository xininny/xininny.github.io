{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"ab245912-642e-563b-9795-736284604930","excerpt":"연산자에는 산술 연산자, 관계 연산자(비교 연산자), 논리 연산자, 대입 연산자가 있다.@ 1. 산술 연산자 산술 연산자는 가장 기본적인 연산자다. 대부분의 연산자는 일반적으로 수학에서 사용하는 심볼과 동일하다. 일반 수학 연산처럼 왼쪽 연산자부터 계산하고 곱셈과 나눗셈이 있다면 먼저 계산한다. 연산자는 괄호가 있다면 괄호 부분을 먼저 계산한다. 즉, 괄호도 연산자다. 괄호는 연산의 우선 순위를 결정해준다. 나눗셈은 실수, 정수, 나머지 연산자로 나뉜다. /는 실수 나눗셈이다. 실수 나눗셈이란 나눗셈의 결과가 실수로 나오는 것을 말한다. //는 정수 나눗셈이다. 나눗셈의 결과로 정수값(몫)을 반환한다. 나눗셈 연산 후 소수부분은 버리고 정수부분만 남겨둔다(floor division이라고 한다) %는 나머지 연산자다. 이름 그대로 나머지를 반환한다. 2. 관계 연산자(비교 연산자) 관계 연산자를 하기 전 boolean(불리언, 부울) 자료형을 설명하자면 boolean 자료형은 Tru…","fields":{"slug":"/python/operators/"},"frontmatter":{"categories":"Python","title":"Python | 4. 연산자","date":"February 17, 2024"}},"next":{"fields":{"slug":"/python/input/"}},"previous":null},{"node":{"id":"0ee8bdc8-7141-5ee2-9199-01b814c8cac0","excerpt":"print( ) 함수와 반대 기능을 수행한다.@ input 함수 print( ) 함수와 input( ) 함수를 연속해서 사용함으로써 입력값을 확인할 수 있다. 입력값의 자료형을 알아볼 땐 type( )를 사용한다. 입력값은 무조건 문자열이고, 숫자를 입력하더라도 문자열로 입력된다. 즉 input 함수는 문자열을 반환한다. input( ) 함수는 문자열을 반환한다. 따라서 정수를 입력받고 싶으면 int( ) 함수를 이용해서 문자열을 숫자로 변환할 수 있다 즉, input( ) 함수는 문자열로 입력받기 때문에 숫자를 입력받으려면 int( ) 함수로 변환해서 사용한다. int( ) 함수를 통해서 파라미터를 int 자료형으로 변경할 수 있다고 했지만 아래 문장은 에러다. “1”, “123” 처럼 숫자로 된 문자열만 변경이 가능하다.","fields":{"slug":"/python/input/"},"frontmatter":{"categories":"Python","title":"Python | 3. input 함수","date":"February 16, 2024"}},"next":{"fields":{"slug":"/python/variables/"}},"previous":{"fields":{"slug":"/python/operators/"}}},{"node":{"id":"38326eb1-6ed7-55b5-8ad4-51932b582f1c","excerpt":"컴퓨터는 사용하는 데이터를 주기억장치에 보관해서 사용한다. 이 값을 CPU로 가져와서 사용하려면, 그 변수가 위치한 곳의 주소를 일일이 기억해야한다. 그게 귀찮아서, 이름을 붙여서 사용하는데 그것이 바로 변수다.@ 변수 변수의 이름은 기능/역할/의미를 파악할 수 있도록 상세하게 만드는 것이 좋다. underscore(_)를 통해서 변수의 이름을 만드는 것이 일반적이다. 변수에는 다양한 형태의 ‘값’들이 있다. 수학 시간에 사용하는 자연수, 정수, 실수, 허수들처럼 컴퓨터에서도 다양한 형태의 값들을 사용할 수 있다. 이를 자료형(data types)이라고 한다. type( ) 함수는 파라미터로 주어지는 변수의 type(자료형)을 반환한다.\r\ntype( ) 함수는 파이썬 내장 함수이다. print와 type함수를 응용해서 print(type(my_number))를 만들 수 있다. 이 문장은 type(my_number)라는 함수가 가장 먼저 실행된다. 이 type( ) 함수는 파라미터의…","fields":{"slug":"/python/variables/"},"frontmatter":{"categories":"Python","title":"Python | 2. 변수(variables)","date":"February 15, 2024"}},"next":{"fields":{"slug":"/python/function/"}},"previous":{"fields":{"slug":"/python/input/"}}},{"node":{"id":"6d1ea9e9-5dd4-5f96-aec1-02d0e6a4e979","excerpt":"파이썬에는 다양한 종류의 함수가 있다. 내장 함수 외장 함수 사용자 정의 함수@ 1. 파이썬 내장 함수 내장 함수란 파이썬 인터프리터가 설치될 때 별도의 작업없이 바로 사용 가능한 함수들이다. 아래 링크를 접속하면 내장함수 이름들을 볼 수 있다.  Python library functions   점프 투 파이썬 내장 함수  참고 추상화 : 복잡한 세부사항을 숨기고, 주요 기능에만 집중할 수 있게 해주는 개념 (변수, 함수, 객체) 2. Print 함수 1) 주석 Sharp(샵, #) 기호로 시작되는 줄은 주석이다. 주석은 프로그램의 실행과는 상관없이 코드의 설명 등에 도움되는 정보를 기입하는 문장이다. 2) print( ) print( ) 함수는 괄호( ) 안의 내용물(파라미터)을 화면에 출력해준다. print( ) 함수를 통해 문자열도 출력할 수 있다. print( ) 함수의 괄호 내부에 출력할 내용을 적어주면 되기 때문이다. ” ” 또는 ’ ‘로 묶인 부분을 문자열(string…","fields":{"slug":"/python/function/"},"frontmatter":{"categories":"Python","title":"Python | 1. 함수, 내장함수, Print 함수","date":"February 14, 2024"}},"next":{"fields":{"slug":"/project/garida/review/"}},"previous":{"fields":{"slug":"/python/variables/"}}},{"node":{"id":"625cde29-5279-5e52-a471-8611bdcbe2eb","excerpt":"가리다(GaRiDa)는 안전한 SNS 사용을 위한 개인정보 마스킹 어플입니다. 생성형 이미지를 통해 사진의 이질감을 줄여주는 자연스러운 얼굴 마스킹으로 본인 뿐만 아니라 사진에 나온 다른 얼굴을 가리는데 편리함을 주고자 하였습니다.@ 1. 프로젝트 시작 4주간의 교육을 마치고 팀 프로젝트로 안전한 SNS 사용을 위한 개인정보 마스킹 어플 가리다(GaRiDa)를 개발했다. 그동안 학교 강의만 따라가고 스스로 코딩을 해본적이 없었기에 프로젝트 경험을 쌓을 수 있다는 것에 설레면서도 제대로 된 프로젝트를 해본 적이 없다는 것이 팀에 큰 걸림돌이 되지 않을까 하는 걱정이 컸었다. 더군다나 처음으로 대외활동에 참여하고 학교 내 사람들이 아닌 분들과 팀을 하다보니 제대로 하고 싶은 마음이 컸다. 2. 프로젝트 주제 선정 사람들마다 각자 하고 싶은 주제가 있고, 각자만의 아이디어가 있다. 각자만의 아이디어를 팀원들에게 공유하고 회의를 거치면서 아이디어를 구체화해간다. 우리 팀은 우선 대분류를 …","fields":{"slug":"/project/garida/review/"},"frontmatter":{"categories":"PROJECT","title":"가리다(GaRiDa) | 4. 프로젝트 후기","date":"February 09, 2024"}},"next":{"fields":{"slug":"/project/garida/prototype/"}},"previous":{"fields":{"slug":"/python/function/"}}},{"node":{"id":"5ae8737b-58e0-5f82-87c1-c42010e5c304","excerpt":"가리다(GaRiDa)는 안전한 SNS 사용을 위한 개인정보 마스킹 어플입니다. 생성형 이미지를 통해 사진의 이질감을 줄여주는 자연스러운 얼굴 마스킹으로 본인 뿐만 아니라 사진에 나온 다른 얼굴을 가리는데 편리함을 주고자 하였습니다.@ 사용 언어 및 도구 협업 툴 : Notion 프론트엔드 개발 툴 : Flutter 백엔드 개발 툴 : Docker, FastAPI MVP 가리다(GaRiDa) 프로토타입 :  Figma  가리다(GaRiDa) 프로토타입 레포지토리 :  Github Prototype Repository  프로토타입 아직 가리다(GaRiDa) 어플 개발을 다 끝내지 못했습니다. 그렇기에 일단 진행한 단계까지의 코드를 깃허브에 올려두었습니다. 가리다(GaRiDa) 프론트엔드 레포지토리 :  Github FE Repository  가리다(GaRiDa) 백엔드 레포지토리 :  Github BE Repository  백엔드 실행 방법 우선, Docker 프로그램을 실행합니다. …","fields":{"slug":"/project/garida/prototype/"},"frontmatter":{"categories":"PROJECT","title":"가리다(GaRiDa) | 3. 프로토타입","date":"February 08, 2024"}},"next":{"fields":{"slug":"/project/garida/detail/"}},"previous":{"fields":{"slug":"/project/garida/review/"}}},{"node":{"id":"bd591c91-7307-5361-a3da-bf12bfcbb884","excerpt":"가리다(GaRiDa)는 안전한 SNS 사용을 위한 개인정보 마스킹 어플입니다. 생성형 이미지를 통해 사진의 이질감을 줄여주는 자연스러운 얼굴 마스킹으로 본인 뿐만 아니라 사진에 나온 다른 얼굴을 가리는데 편리함을 주고자 하였습니다.@ 1. 프로세스 기능을 설명하기 앞서, 앱 서비스의 전체 프로세스를 간략하게 설명하자면, 메인화면에서 사진 편집 및 글 작성하는 화면으로 간 후, 얼굴인식, 배경 블러 조절, 옷 입히기를 선택할 수 있는 페이지로 이동합니다. 그리고 각 기능에서 원하는 방법으로 개인정보를 마스킹 해 최종적으로 SNS에 공유할 수 있는 SNS 연결화면으로 넘어가는 프로세스를 갖추고 있습니다.\r\n 2. 주요 기능 얼굴 이모지 생성 마스킹 기능 이미지 내 얼굴을 인식해 감정, 성별, 이모지 스타일 등을 반영한 이모티콘을 생성해 얼굴을 마스킹합니다. Face Recognition, Face Alignment, Prompt Engineering을 활용하였고 각 기술의 적용 흐름은…","fields":{"slug":"/project/garida/detail/"},"frontmatter":{"categories":"PROJECT","title":"가리다(GaRiDa) | 2. 주요 기능","date":"February 07, 2024"}},"next":{"fields":{"slug":"/project/garida/intro/"}},"previous":{"fields":{"slug":"/project/garida/prototype/"}}},{"node":{"id":"06d6fbe6-ca53-53b1-97c6-30bbee88c6da","excerpt":"가리다(GaRiDa)는 안전한 SNS 사용을 위한 개인정보 마스킹 어플입니다. 생성형 이미지를 통해 사진의 이질감을 줄여주는 자연스러운 얼굴 마스킹으로 본인 뿐만 아니라 사진에 나온 다른 얼굴을 가리는데 편리함을 주고자 하였습니다.@ 주제 선정 배경 최근 사회적으로 SNS의 사용 인구가 증가하며 자신의 일상을 불특정 다수와 공유하는 서비스 이용자들이 늘어나고 있는 추세입니다. 이러한 SNS에서 육아를 공유하는 부모를 일컫는 셰어런팅 이용자 또한 증가하며 자녀나 자녀의 어린 친구들의 개인정보 자기 결정권과 같은 침해 위험이 높아지고 있는 것을 알 수 있었습니다. 그리고 다양한 설문 통계자료를 통해 SNS 생활에서 개인정보 기반 스토킹, 유출 위험성에 대한 pain point를 확인할 수 있었습니다. 그에 비해 기존 서비스들에는 한계가 있었습니다. 마스킹 어플을 추가적으로 사용해야 하고, 자동 모자이크 영역과 개수가 한정되어 있으며 또는 모자이크할 영역을 유저가 직접 드래그해 채워야 …","fields":{"slug":"/project/garida/intro/"},"frontmatter":{"categories":"PROJECT","title":"가리다(GaRiDa) | 1. 주제 선정 배경","date":"February 06, 2024"}},"next":{"fields":{"slug":"/record/kisia/i4/"}},"previous":{"fields":{"slug":"/project/garida/detail/"}}},{"node":{"id":"1046c802-27ca-59e2-b9a6-de6185d612da","excerpt":"보안에 대해서 관심이 있어왔고 학교 수업으로 배우기 부족해 독학으로 공부했지만 부족하다고 느껴 여러 대외활동을 찾아봤었다. 더군다나 보안 관련 대외활동은 많지 않기에 막막했는데 마침 KISIA(한국정보보호산업협회)에서 AI 보안 기술개발 교육과정이 열린다는 것을 보고 지원하게 되었다.@ 1. AI보안 기술개발 교육과정  우선 교육과정에 대해 설명하자면 AI 보안 기술개발 교육과정은 악성코드, 네트워크, 개인정보반으로 나눠진다. 그 중 개인정보반은 내가 들어갔을 당시 처음으로 생긴 반이였다. 나는 그중 개인정보반을 신청했고 감사하게도 합격을 하게 되어 한 달동안 교육을 받고 프로젝트까지 해서 교육과정을 수료했다. 교육은 공통 교육과 심화교육으로 이루어진다. 공통교육은 6일정도 진행되었고 7일차에 중간 평가를 본다. 공통교육은 악성코드, 네트워크, 개인정보반 모두 동일한 교육을 배우는 것 같았고, 심화교육은 각 반의 내용에 맞춰 진행되는 것 같았다. 심화교육은 12일간 진행되었고 마지…","fields":{"slug":"/record/kisia/i4/"},"frontmatter":{"categories":"RECORD","title":"KISIA | AI 보안 개인정보반 후기","date":"February 05, 2024"}},"next":null,"previous":{"fields":{"slug":"/project/garida/intro/"}}}],"categories":["All","Python","PROJECT","RECORD"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}